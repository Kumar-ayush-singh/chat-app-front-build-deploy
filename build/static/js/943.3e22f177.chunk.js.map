{"version":3,"file":"static/js/943.3e22f177.chunk.js","mappings":"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","sources":["components/functional/styledCard.jsx","pages/chatPage/components/cards/ChatCard.js","pages/chatPage/components/recentChats.js","pages/chatPage/components/cards/GroupChatCard.js","pages/chatPage/components/GroupChats.js","pages/chatPage/components/cards/UserCard.js","pages/chatPage/components/SearchUsers.js","pages/chatPage/components/chatNavBar.jsx","pages/chatPage/chatBody.js","pages/chatPage/components/Message.js","pages/chatPage/components/cards/WelcomeCard.jsx","pages/chatPage/components/cards/unreadTag.jsx","pages/chatPage/CurrentChatMessages.js","pages/chatPage/ChatPage.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst StyledCard = styled.section`\r\n\r\n  --thm-online-status-color: var(--thm-primary-color);\r\n  --thm-selected-chat-color: linear-gradient(300deg, var(--thm-primary-color), var(--thm-secondary-color));\r\n\r\n  margin-bottom: 5px;\r\n  @media (max-width: 950px){\r\n    margin: 0;\r\n  }\r\n\r\n  .card {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    background-color: var(--thm-transparent-color);\r\n    border-radius: 15px;\r\n    padding: 15px 20px;\r\n    // box-shadow: 0px 0px 2px var(--thm-background-color) inset;\r\n    // position: relative;\r\n\r\n    @media(max-width: 950px){\r\n      background-color: transparent;\r\n      padding: 10px;\r\n    }\r\n\r\n    &:hover{\r\n      background: var(--thm-transparent2-color);\r\n    }\r\n    &.active{\r\n      @media (min-width: 750px){\r\n        background: var(--thm-selected-chat-color);\r\n      }\r\n    }\r\n\r\n    &>div.img-notification-container {\r\n      height: max-content;\r\n      width: max-content;\r\n      position: relative;\r\n\r\n      img{\r\n        width: 50px;\r\n        height: 50px;\r\n        width: 50px;\r\n        border-radius: 50%;\r\n      }\r\n\r\n      div{\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        width: 20px;\r\n        height: 20px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        border-radius: 50%;\r\n        color: black;\r\n        font-weight: bold;\r\n        background: yellow;\r\n      }\r\n    }\r\n\r\n    &>div.card-info{\r\n      flex-grow: 1;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 4px;\r\n      overflow: hidden;\r\n\r\n      h5{\r\n        margin: 0;\r\n        text-overflow: ellipsis;\r\n        overflow: hidden;\r\n        white-space: nowrap;\r\n      }\r\n\r\n      span{\r\n        font-size: 12px;\r\n        color: #d5d5d5;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        font-weight: 500;\r\n      }\r\n\r\n      &.new-message{\r\n        font-weight: bold;\r\n      }\r\n    }\r\n\r\n    &>span, div.img-notification-container{\r\n      display: block;\r\n      flex-shrink: 0;\r\n      flex-grow: 0;\r\n    }\r\n    \r\n    &>span.online{\r\n      width: 12px;\r\n      height: 12px;\r\n      border-radius: 50%;\r\n\r\n      background: var(--thm-online-status-color);\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport default StyledCard;","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport dummuPic from \"../../assets/dummy-pic.jpeg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setCurrentReceiver, startConversation } from \"../../../../store/slices/chatSlice\";\r\nimport StyledCard from \"../../../../components/functional/styledCard\";\r\nimport { removeChatNotification, setChatNotification, updateViewedMessage } from \"../../../../store/slices/realTimeSlice\";\r\nimport socket from \"../../../../util/socket.io\";\r\nimport { setMobileViewSection } from \"../../../../store/slices/chatNavSlice\";\r\nimport getAvatarSvg from \"../../../../util/allAvatar\";\r\n\r\n\r\n\r\nconst ChatCard = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector(store => store.user);\r\n  const { currentChat } = useSelector(store => store.chat);\r\n  const { onlineUsers, chatNotifications } = useSelector(store => store.realTime);\r\n  \r\n  const setChatIdInStore = () => {\r\n    //remove unread tag if user click second time\r\n    if(chatNotifications[props.chat._id] && chatNotifications[props.chat._id].newMsgCount === 0){\r\n      dispatch(updateViewedMessage(props.chat._id));\r\n    }\r\n    dispatch(setCurrentReceiver({\r\n      name: props.chat.otherMember.name,\r\n      Id: props.chat.otherMember._id,\r\n      avatar: props.chat.otherMember.avatar,\r\n    }));\r\n    dispatch(startConversation({\"chatId\": props.chat._id, \"userId\": user.userId }));\r\n    dispatch(setMobileViewSection(\"currentChatContainer\"));\r\n    \r\n    if(chatNotifications[props.chat._id] && chatNotifications[props.chat._id].newMsgCount){\r\n      dispatch(removeChatNotification(props.chat._id));\r\n      socket.emit(\"message-viewed\", props.chat._id, props.chat.lastMessage._id, (res) => {\r\n        console.log(`Viewed message id is send to server and get response status ${res.status}`);\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    console.warn(props);\r\n    if(props.chat.lastMessage){\r\n      dispatch(setChatNotification({\r\n        chatId: props.chat._id,\r\n        lastMessage: props.chat.lastMessage,\r\n        newMsgCount: (props.chat.lastMessage.senderId !== user.userId) ? props.chat.unreadMsgCount : 0,\r\n        lastViewedMessage: props.chat.lastViewedMessage,\r\n        dataFromDB: true,\r\n      }));\r\n    }\r\n  }, [props.chat]);\r\n\r\n  console.warn(props);\r\n  const isChatOpen = props.chat._id === currentChat.Id;\r\n\r\n  return (\r\n    <StyledCard>\r\n      <div className={(isChatOpen ? \"active\" : \"\") + \" card\"} onClick={setChatIdInStore}>\r\n        <div className=\"img-notification-container\">\r\n          <img src={getAvatarSvg(props.chat.otherMember.avatar)} alt=\"\" />\r\n          {\r\n            chatNotifications[props.chat._id] &&\r\n            chatNotifications[props.chat._id].newMsgCount >= 1 ?\r\n            <div>{chatNotifications[props.chat._id].newMsgCount}</div>\r\n            :\r\n            null\r\n          }\r\n        </div>\r\n        <div className=\"card-info new-message\">\r\n          <h5>{props.chat.otherMember.name}</h5>\r\n          {\r\n            chatNotifications[props.chat._id] &&\r\n            chatNotifications[props.chat._id].lastMessage.text ?\r\n            <span>{chatNotifications[props.chat._id].lastMessage.text}</span>\r\n            :\r\n            null\r\n          }\r\n        </div>\r\n        <span className={ onlineUsers[props.chat.otherMember._id] ? \"online\" : \"offline\"}></span>\r\n      </div>\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nexport default ChatCard;\r\n","import axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ChatCard from \"./cards/ChatCard\";\r\nimport { setAllChats } from \"../../../store/slices/chatSlice\";\r\nimport { setChatSection } from \"../../../store/slices/chatNavSlice\";\r\nimport { getToken } from \"../../../util/localStorage\";\r\nimport { logOutUser } from \"../../../store/slices/userPageSlice\";\r\nimport { HOST_URL, PORT } from \"../../../util/hostDetails\";\r\n\r\n\r\nconst RecentChats = () => {\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector((store) => store.user);\r\n    const { allChats, newChat } = useSelector( store => store.chat );\r\n\r\n\r\n    const getChats = async () => {\r\n        try {\r\n            const token = getToken();\r\n            if(!token){\r\n                dispatch(logOutUser);\r\n                return;\r\n            }\r\n            const { data } = await axios.get(\r\n                `${HOST_URL}:${PORT}/api/chat/${user.userId}`,\r\n                {\r\n                  headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                  }\r\n                }\r\n            );\r\n\r\n            dispatch(setAllChats(data));\r\n            \r\n            console.log(\"All Chats of user : \");\r\n            console.log(data);\r\n\r\n\r\n            // if(data.length < 1){\r\n            //     dispatch(setChatSection(\"searchUsers\"));\r\n            // }\r\n        } catch (error) { }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getChats();\r\n    }, [newChat]);\r\n\r\n    const startNewHandler = () => {\r\n        dispatch(setChatSection(\"searchUsers\"));\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <Wrapper>\r\n            {allChats.length === 0 ? (\r\n                <div className=\"chat404\">\r\n                    <div>\r\n                        <div>No Chat Available.</div>\r\n                        <button onClick={startNewHandler}>Start New</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n            :\r\n            (\r\n                allChats.map((chat, i) => {\r\n                    return <ChatCard key={i} chat={chat} />;\r\n                })\r\n            )}\r\n        </Wrapper>\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nconst Wrapper = styled.div`\r\nheight: 100%;\r\n\r\n    .chat404{\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        padding: 30px;\r\n        border-radius: 15px;\r\n        background: linear-gradient(var(--thm-transparent-color), transparent);\r\n        font-weight: 500;\r\n\r\n\r\n        &>div{\r\n            width: 100%;\r\n            padding: 20px;\r\n            margin-top: -50px;\r\n            text-align: center;\r\n            background: var(--thm-transparent-color);\r\n            border-radius: 10px;\r\n            \r\n            button{\r\n                margin-top: 15px;\r\n                background: var(--thm-gradient);\r\n                outline: none;\r\n                border: none;\r\n                border-radius: 5px;\r\n                padding: 10px 20px;\r\n                cursor: pointer;\r\n                font-weight: inherit;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport default RecentChats;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FaHashtag } from \"react-icons/fa\";\r\nconst GroupChatCard = () => {\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"chat-card\">\r\n        <div className=\"icon\">\r\n          <FaHashtag />\r\n        </div>\r\n        <h5>group name</h5>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\nconst Wrapper = styled.section`\r\n  .chat-card {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 2rem;\r\n    border-radius: 20px 20px;\r\n    margin: 5px 1rem;\r\n    background-color: white;\r\n    padding: 0.5rem;\r\n    .icon {\r\n      font-size: 2rem;\r\n    }\r\n  }\r\n`;\r\nexport default GroupChatCard;\r\n","import React from \"react\";\r\nimport GroupChatCard from \"./cards/GroupChatCard\";\r\nimport styled from \"styled-components\";\r\n\r\nconst GroupChats = () => {\r\n  return (\r\n    <Wrapper>\r\n      <GroupChatCard />\r\n    </Wrapper>\r\n  );\r\n};\r\nconst Wrapper = styled.section`\r\n\r\n`;\r\nexport default GroupChats;\r\n","import axios from \"axios\";\r\n// import React, { useEffect, useState } from \"react\";\r\nimport dummuPic from \"../../assets/dummy-pic.jpeg\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport StyledCard from \"../../../../components/functional/styledCard\";\r\nimport { startConversation, setCurrentReceiver } from \"../../../../store/slices/chatSlice\";\r\nimport { setChatSection, setMobileViewSection } from \"../../../../store/slices/chatNavSlice\";\r\nimport { HOST_URL, PORT } from \"../../../../util/hostDetails\";\r\nimport { getToken } from \"../../../../util/localStorage\";\r\nimport { logOutUser } from \"../../../../store/slices/userPageSlice\";\r\nimport getAvatarSvg from \"../../../../util/allAvatar\";\r\n\r\n\r\nconst UserCard = ({ name, Id, avatar }) => {\r\n  console.log(name + \" : \" + Id);\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((store) => store.user);\r\n  const { onlineUsers } = useSelector(store => store.realTime);\r\n  const { receiverId } = useSelector(store => store.chat.currentChat);\r\n  console.log(useSelector(store => store));\r\n\r\n  \r\n  const createChat = async () => {\r\n    try {\r\n      const token = getToken();\r\n      if(!token){\r\n        dispatch(logOutUser());\r\n      }\r\n      console.log(user)\r\n      const { data } = await axios.post(`${HOST_URL}:${PORT}/api/chat`, {\r\n        senderId: user.userId,\r\n        receiverId: Id,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      dispatch(startConversation({chatId: data._id, userId: user.userId}));\r\n      dispatch(setChatSection(\"recentChats\"));\r\n      dispatch(setCurrentReceiver({\r\n        name: name,\r\n        Id: Id,\r\n      }));\r\n      dispatch(setMobileViewSection(\"currentChatContainer\"));\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <StyledCard>\r\n      <div className=\"card\" onClick={createChat}>\r\n        <div className=\"img-notification-container\">\r\n          <img src={getAvatarSvg(avatar)} alt=\"\" />\r\n        </div>\r\n        <div className=\"card-info\">\r\n          <h5>{name}</h5>\r\n        </div>\r\n        <span className={ onlineUsers[Id] ? \"online\" : \"offline\"}></span>\r\n      </div>\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default UserCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport UserCard from \"./cards/UserCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getToken } from \"../../../util/localStorage\";\r\nimport { logOutUser } from \"../../../store/slices/userPageSlice\";\r\nimport { HOST_URL, PORT } from \"../../../util/hostDetails\";\r\n\r\n\r\nconst SearchUsers = () => {\r\n  const { user } = useSelector(state => state.user)\r\n  const [users, setUsers] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  const getAllUser = async () => {\r\n    const token = getToken();\r\n      if(!token){\r\n        dispatch(logOutUser());\r\n        return;\r\n      }\r\n    const { data } = await axios.get(`${HOST_URL}:${PORT}/api/user/get-all/`,\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    setUsers(data);\r\n    console.log(users);\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n    getAllUser();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      {users.map(({name, _id, avatar}, i) => {\r\n          return _id === user.userId ? null : <UserCard key={i} name={name} Id={_id} avatar={avatar} />\r\n      })}\r\n    </Wrapper>\r\n  );\r\n};\r\nconst Wrapper = styled.section`\r\n  .search-bar-user {\r\n    display: flex;\r\n    /* background-color: red; */\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    margin: 1rem auto;\r\n\r\n    input {\r\n      border: none;\r\n      border-radius: 2px 2px;\r\n      padding: 0.2 1rem;\r\n      font-size: 1.2rem;\r\n    }\r\n    button {\r\n      padding: 0.2rem 1rem;\r\n      border-radius: 10px 10px;\r\n      border: none;\r\n      font-size: 1rem;\r\n    }\r\n    button:hover {\r\n    }\r\n  }\r\n`;\r\nexport default SearchUsers;\r\n","import styled from \"styled-components\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { BiGroup, BiLogOutCircle, BiUser } from \"react-icons/bi\";\r\nimport { BsFillChatDotsFill } from \"react-icons/bs\";\r\nimport { FaHome } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setChatSection } from \"../../../store/slices/chatNavSlice\";\r\nimport { logOutUser } from \"../../../store/slices/userPageSlice\";\r\n\r\n\r\nexport default function ChatNavBar() {\r\n    const { chatSection } = useSelector( store => store.chatNav );\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    function navHandler(pram){\r\n        dispatch(setChatSection(pram));\r\n      }\r\n      function handleLogout(){\r\n        dispatch(logOutUser());\r\n        navigate('/');\r\n      }\r\n\r\n    return (\r\n        <Wrapper className=\"chatNavBar\">\r\n            <ul>\r\n                <li className={chatSection === \"groupChats\" ? \"active\" : \"\"} onClick={() => {\r\n                    navHandler(\"groupChats\");\r\n                }}>\r\n                    <BiGroup />\r\n                </li>\r\n                <li className={chatSection === \"recentChats\" ? \"active\" : \"\"} onClick={() => {\r\n                    navHandler(\"recentChats\");\r\n                }}>\r\n                    <BsFillChatDotsFill />\r\n                </li>\r\n                <li className={chatSection === \"searchUsers\" ? \"active\" : \"\"} onClick={() => {\r\n                    navHandler(\"searchUsers\");\r\n                }}>\r\n                    <BiUser />\r\n                </li>\r\n            </ul>\r\n            <div className=\"high-order-buttons\">\r\n                <button className=\"home\">\r\n                    <Link to=\"/\">\r\n                        <FaHome />\r\n                    </Link>\r\n                </button>\r\n                <button className=\"log-out\" onClick={handleLogout}>\r\n                    <Link to=\"/\">\r\n                        <BiLogOutCircle />\r\n                    </Link>\r\n                </button>\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.nav`\r\n\r\n&.chatNavBar {\r\n    --container-width: 80px;\r\n    width: var(--container-width);\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    position: relative;\r\n\r\n    @media (max-width: 950px){\r\n        width: 100%;\r\n    }\r\n\r\n    ul {\r\n      display: flex;\r\n      flex-direction: column;\r\n      width: 100%;\r\n\r\n      @media (max-width: 950px){\r\n        flex-direction: row;\r\n        justify-content: space-between;\r\n      }\r\n\r\n      li{\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        padding: 10px 20px;\r\n        margin: 10px 0px;\r\n        cursor: pointer;\r\n        position: relative;\r\n\r\n        @media (max-width: 950px){\r\n            margin: 0px;\r\n            padding: 10px;\r\n        }\r\n\r\n        &, *{\r\n          transition: 0.2s ease;\r\n        }\r\n\r\n        svg{\r\n          width: var(--container-width);\r\n          height: 25px;\r\n          transform: scale(1);\r\n          transform-origin: center center;\r\n        }\r\n\r\n        &.active, &:hover{\r\n          svg{\r\n            transform: scale(1.2);\r\n          }\r\n        }\r\n        \r\n        &.active{\r\n          @media (max-width: 950px){\r\n            margin-top: -15px;\r\n          }\r\n\r\n          svg{\r\n            fill: var(--thm-svg-active-color);\r\n          }\r\n\r\n          &::after{\r\n            top: 0;\r\n            height: 100%;\r\n\r\n            @media(max-width: 950px){\r\n                height: 3px;\r\n                left: 0;\r\n                top: unset;\r\n                width: 100%;\r\n            }\r\n          }\r\n\r\n        }\r\n        &::after{\r\n          content: \"\";\r\n          position: absolute;\r\n          display: block;\r\n          background: var(--thm-svg-active-color);\r\n          top: 50%;\r\n          left: 0px;\r\n          width: 5px;\r\n          border-radius: 3px;\r\n          height: 0px;\r\n          transition: 0.2s linear;\r\n\r\n\r\n          @media (max-width: 950px){\r\n            top: unset;\r\n            bottom: 0px;\r\n            left: 50%;\r\n            height: 3px;\r\n            width: 0px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .high-order-buttons{\r\n      position: absolute;\r\n      bottom: 0px;\r\n      left: 0px;\r\n      width: var(--container-width);\r\n      padding: 8px;\r\n\r\n      @media (max-width: 950px){\r\n        display: none;\r\n      }\r\n\r\n\r\n      .home{\r\n        width: 100%;\r\n        height: 40px;\r\n        padding: 5px;\r\n        margin-bottom: 5px;\r\n        background: transparent;\r\n        border: none;\r\n        outline: none;\r\n\r\n        svg{\r\n          height: 100%;\r\n          width: 100%;\r\n          cursor: pointer;\r\n        }\r\n      }\r\n\r\n      .log-out{\r\n        height: 40px;\r\n        width: 100%;\r\n        background: #fbd547;\r\n        border-radius: 5px;\r\n        padding: 5px;\r\n        overflow: hidden;\r\n        cursor: pointer;\r\n\r\n\r\n        svg{\r\n          fill: black;\r\n          height: 100%;\r\n          width: 100%;\r\n          transform: rotate(-180deg);\r\n          transition: 0.15s ease;\r\n        }\r\n\r\n        &:hover svg{\r\n          transform: rotate(360deg);\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n`;","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport RecentChats from \"./components/recentChats\";\r\nimport GroupChats from \"./components/GroupChats\";\r\nimport SearchUsers from \"./components/SearchUsers\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport styled from \"styled-components\";\r\nimport { FiDelete } from \"react-icons/fi\";\r\nimport ChatNavBar from \"./components/chatNavBar\";\r\n\r\n\r\n\r\nconst ChatBody = () => {\r\n\r\n  const { chatSection } = useSelector((store) => store.chatNav);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const togleSearching = () => {\r\n    setIsSearching(!isSearching);\r\n  }\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"head\">\r\n\r\n        <div>\r\n          {!isSearching && \r\n            <h3>{\r\n            chatSection === \"recentChats\" ?\r\n              \"Chat\" :\r\n              chatSection === \"groupChats\" ?\r\n                \"Groups\" :\r\n                \"Users\"\r\n            }\r\n            </h3>\r\n          }\r\n          <div className={isSearching ? \"searching-container\": \"\"}>\r\n            <input type=\"search\" className={isSearching ? \"searching\": \"\"}/>\r\n            {\r\n            isSearching ? \r\n              <FiDelete onClick={togleSearching} className=\"icon\"/> \r\n              : \r\n              <BsSearch onClick={togleSearching} className=\"icon\"/>\r\n            }\r\n          </div>\r\n        </div>\r\n        <nav>\r\n          <ChatNavBar/>\r\n        </nav>\r\n      </div>\r\n      <div className=\"chat-section-container custom-scroll\">\r\n        {\r\n          chatSection === \"recentChats\" ?\r\n          <RecentChats/> :\r\n          chatSection === \"groupChats\" ? \r\n            <GroupChats/>:\r\n            <SearchUsers />\r\n        }\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n\r\n\r\nwidth: 100%;\r\nheight: 100%;\r\nposition: relative;\r\n\r\n@media (min-width: 950px){\r\n  padding-top: 20px;\r\n}\r\n\r\n&>.head{\r\n  display: grid;\r\n  grid-template-rows: 1fr;\r\n  align-items: space-between;\r\n  height: 100px;\r\n  position: sticky;\r\n  top: 0;\r\n  padding: 0px 20px;\r\n  border-radius: 0px 0px 15px 15px;\r\n\r\n\r\n  @media(max-width: 950px){\r\n    margin: 0;\r\n    padding-top: 20px;\r\n    background: var(--thm-transparent-color);\r\n  }\r\n\r\n  &>*{\r\n    @media (max-width: 950px){\r\n      height: 50%;\r\n    }\r\n  }\r\n\r\n\r\n  &>div{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    &>h3{\r\n      margin: 0;\r\n      font-size: 30px;\r\n\r\n      @media (max-width: 950px){\r\n        font-size: 25px;\r\n      }\r\n    }\r\n\r\n    .icon{\r\n      width: 20px;\r\n      height: 20px;\r\n    }\r\n\r\n    &>div{\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 15px;\r\n      cursor: pointer;\r\n      width: 100%;\r\n      justify-content: flex-end;\r\n\r\n      &.searching-container{\r\n        width: 100%;\r\n      }\r\n\r\n      input{\r\n        border: 1px solid var(--thm-primary-color);\r\n        background: var(--thm-transparent-color);\r\n        outline: none;\r\n        width: 0px;\r\n        height: 30px;\r\n        opacity: 0;\r\n        transition: width .2s ease, opacity .5s ease;\r\n        border-radius: 500px;\r\n        padding: 0px 10px;\r\n        pointer-event: none;\r\n\r\n        &.searching{\r\n          opacity: 1;\r\n          width: 100%;\r\n          flex-grow: 1;\r\n          flex-shrink: 1;\r\n        }\r\n      }\r\n\r\n      &>svg{\r\n        flex-grow: 0;\r\n        flex-shrink: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  &>nav{\r\n    align-self: center;\r\n    @media (min-width: 951px){\r\n      display: none;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n&>.chat-section-container{\r\n  padding: 0px 20px;\r\n  height: calc(100% - 100px);\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  // margin-right: -20px;\r\n\r\n  @media (max-width: 950px){\r\n    padding-top: 10px;\r\n  }\r\n}\r\n`\r\n\r\n\r\n\r\nexport default ChatBody;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Message = ({ message }) => {\r\n\r\n  const { text, classes } = message;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className={\"message\" + classes}>\r\n        <div className=\"msg-text\">\r\n\r\n          {/*finding emoji and scaling it */}\r\n          {\r\n            text.length === 2 && text[0].codePointAt(0) > 8986 && text[0].codePointAt(0) < 129511 ? \r\n            <span className=\"only-emoji\">{text}</span>\r\n            :\r\n            <>\r\n            {[...text].map((char) => {\r\n              return char.codePointAt(0) > 8986 && char.codePointAt(0) < 129511 ?\r\n                <span className=\"txt-emoji\">{char}</span>\r\n                :\r\n                <>{char}</>\r\n            })}\r\n          </>}\r\n        </div>\r\n        {/* <div className=\"msg-time\">06:36 PM</div> */}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\nconst Wrapper = styled.section`\r\n  .message {\r\n    width: 100%;\r\n    display: flex;\r\n    margin-top: 5px;\r\n    \r\n    &.left{\r\n      justify-content: flex-start;\r\n      .msg-text{\r\n        background: var(--thm-other-message-background);\r\n      }\r\n\r\n      &.start{\r\n        .msg-text{\r\n          border-bottom-left-radius: 2px;\r\n        }\r\n      }\r\n      &.end{\r\n        .msg-text{\r\n          border-top-left-radius: 2px;\r\n        }\r\n      }\r\n    }\r\n    \r\n    &.right{\r\n      justify-content: flex-end;\r\n      .msg-text{\r\n        background: var(--thm-own-message-background);\r\n      }\r\n\r\n      &.start{\r\n        .msg-text{\r\n          border-bottom-right-radius: 2px;\r\n        }\r\n      }\r\n      &.end{\r\n        .msg-text{\r\n          border-top-right-radius: 2px;\r\n        }\r\n      }\r\n    }\r\n\r\n    .msg-text{\r\n      max-width: 90%;\r\n      min-width: 50px;\r\n      padding: 20px 10px;\r\n      display: flex;\r\n      word-break: break-word;\r\n      white-space: pre-wrap;\r\n      // justify-content: center;\r\n      align-items: center;\r\n      // min-height: 60px;\r\n      border-radius: 15px;\r\n      background-color: var(--thm-transparent-color);\r\n\r\n      .txt-emoji{\r\n        font-size: 1.5em;\r\n        line-height: 1;\r\n      }\r\n      .only-emoji{\r\n        font-size: 2em;\r\n        line-height: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default React.memo(Message);\r\n","import React from \"react\";\r\nimport { IoMdHand } from \"react-icons/io\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst WelcomeCard = () => {\r\n    return (\r\n        <Wrapper>\r\n            <div>\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                    width=\"559.174\"\r\n                    height=\"600\"\r\n                    data-name=\"Layer 1\"\r\n                    version=\"1.1\"\r\n                    viewBox=\"0 0 559.174 600\"\r\n                >\r\n                    <defs>\r\n                        <linearGradient id=\"thm-gradient\">\r\n                            <stop offset=\"5%\" stop-color=\"#9816f6\" />\r\n                            <stop offset=\"95%\" stop-color=\"#3e2794\" />\r\n                        </linearGradient>\r\n                        <linearGradient id=\"linearGradient1260\">\r\n                            <stop offset=\"0\" stopColor=\"#111827\" stopOpacity=\"1\"></stop>\r\n                            <stop offset=\"0.511\" stopColor=\"#111827\" stopOpacity=\"0.749\"></stop>\r\n                            <stop offset=\"0.789\" stopColor=\"#111827\" stopOpacity=\"0.498\"></stop>\r\n                            <stop offset=\"1\" stopColor=\"#111827\" stopOpacity=\"0\"></stop>\r\n                        </linearGradient>\r\n                        <radialGradient\r\n                            id=\"radialGradient1262\"\r\n                            cx=\"317.374\"\r\n                            cy=\"578.388\"\r\n                            r=\"166.402\"\r\n                            fx=\"317.374\"\r\n                            fy=\"578.388\"\r\n                            gradientTransform=\"matrix(1 0 0 .11216 0 513.518)\"\r\n                            gradientUnits=\"userSpaceOnUse\"\r\n                            spreadMethod=\"reflect\"\r\n                            xlinkHref=\"#linearGradient1260\"\r\n                        ></radialGradient>\r\n                    </defs>\r\n                    <path\r\n                        className=\"selectedCard\"\r\n                        fill=\"#00bfa6\"\r\n                        d=\"M420.747 125.949L142.158 90.43a18.086 18.086 0 00-2.263-.147 17.258 17.258 0 00-2.23.141 17.065 17.065 0 00-2.19.429 17.498 17.498 0 00-2.14.722 18.222 18.222 0 00-1.992.963 18.957 18.957 0 00-1.889 1.204 20.222 20.222 0 00-1.777 1.45 22.086 22.086 0 00-1.658 1.685 23.762 23.762 0 00-1.512 1.905q-.714 1.002-1.34 2.086-.626 1.087-1.162 2.26-.535 1.174-.977 2.427-.458 1.295-.802 2.648-.344 1.353-.575 2.753-.226 1.4-.347 2.844-.12 1.444-.12 2.924.005 1.478.12 2.946.116 1.469.347 2.913.233 1.45.578 2.873.344 1.421.801 2.81.442 1.342.978 2.623.535 1.282 1.161 2.494.626 1.213 1.34 2.355.713 1.147 1.512 2.208.8 1.06 1.659 2.023.86.957 1.777 1.806.917.848 1.888 1.585a23.625 23.625 0 001.992 1.358 21.765 21.765 0 002.14 1.147 20.075 20.075 0 002.19.868 18.974 18.974 0 002.23.589 18.476 18.476 0 002.264.307l278.588 20.378a7.056 7.056 0 002.408-.24 7.552 7.552 0 001.161-.43 8.599 8.599 0 001.128-.631 10.035 10.035 0 001.043-.795 11.676 11.676 0 00.982-.963 13.852 13.852 0 00.918-1.127q.445-.604.854-1.288.41-.683.774-1.426.365-.743.682-1.543.32-.8.59-1.654.271-.855.494-1.76.235-.937.404-1.907.17-.97.29-1.97.117-.998.175-2.024.058-1.025.058-2.074-.004-1.047-.058-2.085-.054-1.037-.175-2.06-.116-1.021-.29-2.027-.173-1.005-.404-1.988-.223-.951-.494-1.859-.268-.895-.59-1.764-.321-.87-.682-1.686-.364-.815-.774-1.581-.41-.767-.854-1.46-.443-.692-.918-1.311-.475-.62-.982-1.16a13.498 13.498 0 00-1.043-1.005 11.325 11.325 0 00-1.128-.858 9.502 9.502 0 00-1.161-.662 8.275 8.275 0 00-1.192-.462 7.597 7.597 0 00-1.218-.26\"\r\n                        data-name=\"Rectangle 1 - Outline\"\r\n                    ></path>\r\n                    <path\r\n                        className=\"card\"\r\n                        fill=\"#e4e4e4\"\r\n                        d=\"M420.747 206.055l-278.589-6.673a17.91 17.91 0 00-4.493.459 18.344 18.344 0 00-2.19.656 19.418 19.418 0 00-2.14.939 20.721 20.721 0 00-1.992 1.165 21.902 21.902 0 00-1.889 1.402 23.58 23.58 0 00-1.777 1.635q-.86.876-1.658 1.864-.799.989-1.512 2.062-.714 1.072-1.34 2.224-.626 1.152-1.162 2.381-.535 1.23-.977 2.528-.458 1.345-.802 2.732-.344 1.388-.575 2.812-.227 1.424-.347 2.881-.12 1.457-.12 2.936.005 1.48.12 2.935.116 1.455.347 2.878.233 1.416.578 2.801.344 1.386.801 2.728.442 1.302.978 2.528.535 1.225 1.161 2.373.626 1.149 1.34 2.216.713 1.065 1.512 2.047.8.982 1.659 1.852a23.351 23.351 0 001.776 1.624 21.71 21.71 0 001.89 1.39 20.544 20.544 0 001.991 1.153 19.277 19.277 0 002.14.925 18.248 18.248 0 002.19.642 17.817 17.817 0 002.23.361 18.005 18.005 0 002.264.073l278.586-8.475a7.253 7.253 0 001.218-.141 7.574 7.574 0 001.192-.345 8.437 8.437 0 001.161-.55 9.87 9.87 0 001.128-.748 11.676 11.676 0 001.043-.903 13.635 13.635 0 00.982-1.064q.474-.568.918-1.222.445-.654.854-1.376.41-.727.774-1.507.365-.78.682-1.613.32-.846.59-1.722.271-.877.494-1.806.234-.951.404-1.94.17-.988.29-1.999.117-1.014.175-2.046.058-1.032.058-2.08-.004-1.039-.058-2.075-.054-1.037-.175-2.047-.116-1.013-.29-1.997-.173-.983-.404-1.946-.224-.93-.495-1.81-.27-.882-.589-1.712-.316-.831-.681-1.61-.365-.779-.774-1.5-.41-.724-.853-1.373t-.919-1.217a13.505 13.505 0 00-.982-1.058 11.566 11.566 0 00-1.043-.896 9.784 9.784 0 00-1.127-.741 8.372 8.372 0 00-1.163-.54 7.536 7.536 0 00-1.192-.338 7.237 7.237 0 00-1.218-.132\"\r\n                        data-name=\"Rectangle 3 - Outline\"\r\n                    ></path>\r\n                    <path\r\n                        className=\"card\"\r\n                        fill=\"#e4e4e4\"\r\n                        d=\"M420.747 281.153l-278.589 20.375a18.476 18.476 0 00-2.263.307 18.974 18.974 0 00-2.23.588 20.076 20.076 0 00-2.19.868 21.77 21.77 0 00-2.14 1.147 23.63 23.63 0 00-1.992 1.358q-.973.743-1.889 1.585-.916.847-1.777 1.806-.86.96-1.658 2.024-.798 1.067-1.512 2.21-.714 1.142-1.34 2.354-.626 1.214-1.162 2.494-.535 1.281-.977 2.623-.458 1.387-.802 2.811-.344 1.424-.575 2.869-.226 1.447-.347 2.914-.12 1.467-.12 2.947.005 1.48.12 2.924.116 1.444.347 2.844.233 1.404.578 2.754.344 1.35.801 2.649.442 1.254.978 2.426.535 1.174 1.161 2.26.626 1.088 1.34 2.087a23.758 23.758 0 001.512 1.904 22.084 22.084 0 001.659 1.686 20.224 20.224 0 001.777 1.45 18.96 18.96 0 001.888 1.204 18.222 18.222 0 001.992.963 17.492 17.492 0 002.14.722 17.066 17.066 0 002.19.429 17.26 17.26 0 002.23.14 18.092 18.092 0 002.264-.146l278.586-35.51a7.596 7.596 0 001.218-.259 8.272 8.272 0 001.192-.462 9.502 9.502 0 001.161-.662 11.325 11.325 0 001.128-.858 13.498 13.498 0 001.043-1.004q.5-.542.982-1.16.474-.62.918-1.313.445-.693.854-1.459.41-.76.774-1.581.365-.821.682-1.685.32-.868.59-1.776.271-.908.494-1.859.235-.984.404-1.99.17-1.005.29-2.027.117-1.022.175-2.06.058-1.037.058-2.085-.005-1.043-.06-2.068-.054-1.026-.174-2.025-.115-1.003-.289-1.973-.173-.97-.404-1.907-.223-.906-.494-1.76-.267-.853-.588-1.654-.322-.8-.683-1.543-.367-.736-.778-1.423-.41-.686-.853-1.288a13.854 13.854 0 00-.918-1.126 11.677 11.677 0 00-.983-.963 10.034 10.034 0 00-1.042-.795 8.599 8.599 0 00-1.128-.632 7.553 7.553 0 00-1.162-.428 7.055 7.055 0 00-2.407-.241\"\r\n                        data-name=\"Rectangle 4 - Outline\"\r\n                    ></path>\r\n                    <path\r\n                        fill=\"#9e616a\"\r\n                        d=\"M268.9 284.886a13.972 13.972 0 0025.287-11.44l53.994-110.925-25.845-15.667-46.63 117.825q-.267.104-.526.218-.26.114-.517.238-.257.124-.51.26-.254.137-.503.288a13.989 13.989 0 00-4.75 19.202z\"\r\n                        data-name=\"Path 5\"\r\n                    ></path>\r\n                    <path\r\n                        fill=\"#ccc\"\r\n                        d=\"M337.874 205.295l-38.357-9.831s1.252-2.831 3.287-7.522c2.036-4.69 4.88-11.23 8.079-18.655a3860.95 3860.95 0 0010.215-23.923c3.467-8.202 6.838-16.304 9.678-23.328 2.84-7.023 6.065-11.23 9.308-13.587a12.797 12.797 0 019.404-2.5 18.177 18.177 0 017.278 2.77 19.818 19.818 0 012.921 2.217l8.894 16.173z\"\r\n                        data-name=\"Path 8\"\r\n                    ></path>\r\n                    <path\r\n                        className=\"card\"\r\n                        fill=\"#e4e4e4\"\r\n                        d=\"M30.902 196.51a24.918 24.918 0 00-2.769.361 25.343 25.343 0 00-2.729.67 26.35 26.35 0 00-2.68.98 27.96 27.96 0 00-2.62 1.287q-1.248.702-2.44 1.527-1.191.824-2.314 1.772-1.122.945-2.178 2.015-1.056 1.07-2.034 2.257-.979 1.187-1.855 2.46-.877 1.271-1.645 2.62-.76 1.353-1.423 2.778-.662 1.425-1.203 2.917-.565 1.546-.989 3.126-.423 1.579-.706 3.185-.284 1.606-.426 3.233-.142 1.627-.142 3.268 0 1.64.142 3.24.142 1.598.426 3.147.283 1.55.706 3.043.424 1.494.985 2.927.547 1.383 1.204 2.676a28.575 28.575 0 001.425 2.489 27.291 27.291 0 001.644 2.287 26.51 26.51 0 001.857 2.091 25.409 25.409 0 002.034 1.849 24.073 24.073 0 002.179 1.58 23.191 23.191 0 004.755 2.34 22.744 22.744 0 005.296 1.204 23.287 23.287 0 002.729.12 24.487 24.487 0 002.769-.195 25.37 25.37 0 002.754-.507 25.872 25.872 0 002.69-.808 26.948 26.948 0 002.618-1.104 28.6 28.6 0 002.538-1.394q1.2-.748 2.337-1.606 1.138-.857 2.205-1.827 1.066-.97 2.06-2.046.992-1.076 1.908-2.258.922-1.181 1.736-2.433.814-1.252 1.524-2.57.71-1.318 1.315-2.698.604-1.38 1.101-2.817.515-1.487.902-3 .386-1.514.645-3.048.257-1.536.387-3.088t.13-3.117q0-1.564-.13-3.09-.128-1.527-.387-3.01-.258-1.48-.645-2.918-.388-1.437-.902-2.82-.5-1.339-1.101-2.597-.61-1.254-1.32-2.434a27.302 27.302 0 00-3.255-4.349 25.785 25.785 0 00-1.904-1.877 24.393 24.393 0 00-2.06-1.633 23.563 23.563 0 00-2.204-1.386 23.292 23.292 0 00-2.342-1.131 22.721 22.721 0 00-5.155-1.463 23.07 23.07 0 00-2.69-.268 24.145 24.145 0 00-2.754.046\"\r\n                        data-name=\"Ellipse 3 - Outline\"\r\n                    ></path>\r\n                    <path\r\n                        className=\"card\"\r\n                        fill=\"#e4e4e4\"\r\n                        d=\"M30.902 309.663a24.918 24.918 0 00-2.769.36 25.345 25.345 0 00-2.729.67 26.353 26.353 0 00-2.68.98 27.96 27.96 0 00-2.62 1.288q-1.248.702-2.44 1.526-1.191.825-2.314 1.772-1.122.945-2.178 2.015-1.056 1.07-2.034 2.257-.979 1.187-1.855 2.46-.877 1.272-1.645 2.621-.76 1.352-1.423 2.777-.662 1.425-1.203 2.917-.565 1.547-.989 3.126-.423 1.58-.706 3.185-.284 1.606-.426 3.233-.142 1.628-.142 3.269 0 1.64.142 3.239.142 1.598.426 3.148.283 1.549.706 3.043.424 1.494.985 2.926.547 1.383 1.204 2.676a28.575 28.575 0 001.425 2.49 27.291 27.291 0 001.644 2.286 26.51 26.51 0 001.857 2.091 25.409 25.409 0 002.034 1.85 24.077 24.077 0 002.179 1.58 23.192 23.192 0 004.755 2.34 22.743 22.743 0 005.296 1.204 23.287 23.287 0 002.729.12 24.49 24.49 0 002.769-.196 25.37 25.37 0 002.754-.507 25.867 25.867 0 002.69-.808 26.945 26.945 0 002.618-1.103 28.597 28.597 0 002.538-1.394q1.2-.75 2.337-1.606 1.138-.857 2.205-1.827 1.066-.97 2.06-2.047.992-1.076 1.908-2.258.922-1.181 1.736-2.433.814-1.252 1.524-2.57.71-1.318 1.315-2.697.604-1.38 1.101-2.817.515-1.488.902-3.001.386-1.513.645-3.048.257-1.536.387-3.088.13-1.551.13-3.116 0-1.565-.13-3.091-.128-1.527-.387-3.01-.258-1.48-.645-2.918-.388-1.437-.902-2.82-.5-1.339-1.101-2.597-.61-1.254-1.32-2.434a27.302 27.302 0 00-3.255-4.349 25.789 25.789 0 00-1.904-1.876 24.395 24.395 0 00-2.06-1.634 23.563 23.563 0 00-2.204-1.385 23.292 23.292 0 00-2.342-1.132 22.72 22.72 0 00-5.155-1.462 23.068 23.068 0 00-2.69-.269 24.143 24.143 0 00-2.754.046\"\r\n                        data-name=\"Ellipse 3 - Outline\"\r\n                    ></path>\r\n                    <path\r\n                        className=\"selectedCard\"\r\n                        fill=\"#00bfa6\"\r\n                        d=\"M30.9 70.925c4.044.111 8.01 1.138 11.6 3.003a30.442 30.442 0 019.303 7.515 35.431 35.431 0 016.187 10.863 39.624 39.624 0 010 26.337 35.726 35.726 0 01-6.187 10.904 30.728 30.728 0 01-9.304 7.57 26.872 26.872 0 01-11.6 3.078 26.519 26.519 0 01-11.835-2.36 29.925 29.925 0 01-9.845-7.259 35.052 35.052 0 01-6.732-11.115 39.585 39.585 0 010-27.623A35.35 35.35 0 019.22 80.68a30.2 30.2 0 019.845-7.323 26.617 26.617 0 0111.843-2.435z\"\r\n                        data-name=\"Ellipse 2 - Outline\"\r\n                    ></path>\r\n                    <g data-name=\"Group 1\">\r\n                        <path\r\n                            fill=\"#9e616a\"\r\n                            d=\"M696.403 662.81l-23.473-.09 7.57 61.334 15.903.08z\"\r\n                            data-name=\"Path 1-2\"\r\n                            transform=\"translate(-320.413 -158.75)\"\r\n                        ></path>\r\n                        <path\r\n                            fill=\"#2f2e41\"\r\n                            d=\"M700.458 739.567l-51.253-.271v-.648a20.102 20.102 0 01.383-3.918 19.598 19.598 0 012.955-7.12 20.124 20.124 0 015.543-5.516 19.61 19.61 0 017.135-2.924 20.11 20.11 0 013.92-.36l31.317.153z\"\r\n                            data-name=\"Path 2\"\r\n                            transform=\"translate(-320.413 -158.75)\"\r\n                        ></path>\r\n                    </g>\r\n                    <g data-name=\"Group 2\">\r\n                        <path\r\n                            fill=\"#9e616a\"\r\n                            d=\"M621.245 662.52l-23.406-.092 7.545 61.251 15.86.08z\"\r\n                            data-name=\"Path 3\"\r\n                            transform=\"translate(-320.413 -158.75)\"\r\n                        ></path>\r\n                        <path\r\n                            fill=\"#2f2e41\"\r\n                            d=\"M625.29 739.168l-51.12-.268v-.648a20.12 20.12 0 01.384-3.912 19.592 19.592 0 012.946-7.11 20.066 20.066 0 015.53-5.511 19.54 19.54 0 017.117-2.917 20.032 20.032 0 013.91-.361l31.232.153z\"\r\n                            data-name=\"Path 4\"\r\n                            transform=\"translate(-320.413 -158.75)\"\r\n                        ></path>\r\n                    </g>\r\n                    <path\r\n                        fill=\"#2f2e41\"\r\n                        d=\"M299.837 253.08l-39.359 146.883 14.407 140.799 31.9.88-6.946-127.134 39.794-63.445 8.631 191.444 28.936-2.046 16.096-164.603a186.93 186.93 0 0011.954-40.024 178.217 178.217 0 002.827-32.7 152.93 152.93 0 00-1.697-22.048 80.712 80.712 0 00-1.59-8.085l-11.735-11.896z\"\r\n                        data-name=\"Path 6\"\r\n                    ></path>\r\n                    <path\r\n                        fill=\"#ccc\"\r\n                        d=\"M351.985 277.646c-6.619 0-12.83-.213-18.461-.632a138.618 138.618 0 01-17.135-2.256 61.013 61.013 0 01-13.975-4.4 22.425 22.425 0 01-9.064-7.153l-.269-.39L303.84 192.8l11.602-78.721a21.455 21.455 0 0121.89-18.333l36.333 1.113a20.364 20.364 0 0119.702 21.592l-4.77 78.29 17.593 77.223-1.246.174c-.501.067-2.432.321-5.456.662-3.953.444-7.99.845-11.998 1.19-5.67.489-11.218.873-16.49 1.143a383.55 383.55 0 01-19.014.512z\"\r\n                    ></path>\r\n                    <path\r\n                        fill=\"#2f2e41\"\r\n                        d=\"M331.823 81.835h-.029a5.804 5.804 0 01-5.8-5.808V43.634a43.29 43.29 0 013.415-16.894A43.987 43.987 0 01352.52 3.507a43.314 43.314 0 0160.388 39.74v32.442a5.814 5.814 0 01-.46 2.272 5.91 5.91 0 01-3.113 3.12 5.833 5.833 0 01-2.273.469l-75.244.285z\"\r\n                        data-name=\"Path 9\"\r\n                    ></path>\r\n                    <path\r\n                        fill=\"#9e616a\"\r\n                        d=\"M389.074 32.525A31.93 31.93 0 01352.15 78.52a31.559 31.559 0 01-18.983-15.208 31.93 31.93 0 0136.897-45.983 31.559 31.559 0 0119.009 15.197z\"\r\n                        data-name=\"Ellipse 1\"\r\n                    ></path>\r\n                    <path\r\n                        fill=\"#2f2e41\"\r\n                        d=\"M315.72 46.27a34.244 34.244 0 012.7-13.361 34.774 34.774 0 0118.277-18.37 34.26 34.26 0 0113.362-2.768l6.483-.033h.219a34.186 34.186 0 0134.165 34.207v.65l-13.715.055-4.677-13.066-.935 13.09-7.084.032-2.358-6.592-.473 6.6-45.958.206z\"\r\n                        data-name=\"Path 10\"\r\n                    ></path>\r\n                    <path\r\n                        className=\"hand\"\r\n                        fill=\"#9e616a\"\r\n                        d=\"M260.504 114.415a15.047 15.047 0 00-5.785 2.835 14.648 14.648 0 00-3.36 3.767 15.288 15.288 0 00-2.21 9.537 14.635 14.635 0 001.351 4.857c3.805 8.079 13.816 11.015 21.381 6.27.132-.084.262-.17.39-.258a13.012 13.012 0 00.75-.545c.12-.094.24-.19.36-.286l75.682 26.936c24.229 3.3 10.58-29.686 10.58-29.686l-81.895-14.697a20.283 20.283 0 00-.489-1.066 21.22 21.22 0 00-.276-.524 11.038 11.038 0 00-.301-.517 14.877 14.877 0 00-16.178-6.623z\"\r\n                        data-name=\"Path 11\"\r\n                        opacity=\"1\"\r\n                    ></path>\r\n                    <path\r\n                        className=\"hand\"\r\n                        fill=\"#ccc\"\r\n                        d=\"M348.231 128.768c2.264-2.826 5.43-6.494 8.646-10.133a867.997 867.997 0 018.941-9.942c2.462-2.698 4.119-4.486 4.119-4.486a17.834 17.834 0 0132.398 13.157 17.575 17.575 0 01-2.66 6.518s-2.469 3.231-6.196 8.054a2426.15 2426.15 0 01-13.743 17.625c-5.03 6.382-10.11 12.732-14.025 17.418-3.917 4.687-6.673 7.715-7.06 7.456L344.99 133.83c-.388-.26.977-2.237 3.241-5.062z\"\r\n                        data-name=\"Path 12\"\r\n                    ></path>\r\n                    <path\r\n                        fill=\"#2f2e41\"\r\n                        d=\"M356.339 80.814a5.712 5.712 0 00.24 3.136 5.842 5.842 0 00.766 1.439 5.909 5.909 0 00.949 1.02 5.795 5.795 0 003.765 1.368q.129-.001.258-.007t.257-.018q.13-.011.26-.03.128-.017.258-.04l4.868-.885 6.705-14.324v13.12l22.132-3.984v-55.68l-37.103.179.917 1.065a25.52 25.52 0 015.778 12.558 41.6 41.6 0 01-.267 14.15 75.016 75.016 0 01-3.95 13.819 110.558 110.558 0 01-5.278 11.583 5.834 5.834 0 00-.555 1.532z\"\r\n                        data-name=\"Path 13\"\r\n                    ></path>\r\n                    <ellipse\r\n                        cx=\"317.374\"\r\n                        cy=\"578.388\"\r\n                        fill=\"url(#radialGradient1262)\"\r\n                        fillOpacity=\"1\"\r\n                        fillRule=\"nonzero\"\r\n                        strokeWidth=\"1.878\"\r\n                        opacity=\"0.82\"\r\n                        rx=\"166.402\"\r\n                        ry=\"18.663\"\r\n                    ></ellipse>\r\n                </svg>\r\n                <h1></h1>\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\nwidth: 100%;\r\nheight: 100%;\r\npadding: 20px;\r\npadding-left: 0px;\r\n\r\n&>div{\r\n    background: linear-gradient(transparent, var(--thm-transparent-color));\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 15px;\r\n\r\n    svg{\r\n        display: block;\r\n        min-height: 200px;\r\n        min-width: 200px;\r\n        fill: var(--thm-transparent2-color);\r\n        height: 60%;\r\n        width: 60%;\r\n    }\r\n    div.shadow{\r\n        width: 100%;\r\n        height: 20px;\r\n        box-shadow: 0px -5px 50px 30px var(--thm-background-color);\r\n        transform: rotateX(80deg);\r\n        border-radius: 50%;\r\n    }\r\n    &>h1{\r\n        color: var(--thm-transparent2-color);\r\n    }\r\n\r\n\r\n    .selectedCard{\r\n        fill: url(#thm-gradient);\r\n        animation: card 1s ease infinite alternate;\r\n    }\r\n    @keyFrames card{\r\n        0%{\r\n            fill: var(--thm-transparent2-color);\r\n        }\r\n        100%{\r\n            fiill: url(#thm-gradient);\r\n        }\r\n    }\r\n\r\n    .card{\r\n        fill: var(--thm-transparent2-color);\r\n    }\r\n\r\n    // hand \r\n    .hand{\r\n        animation: touch 1s ease infinite alternate;\r\n    }\r\n\r\n    @keyframes touch{\r\n        0%{\r\n            transform: translateX(-10px) translateY(20px);\r\n        }\r\n        100%{\r\n            transform: translateX(-30px) translateY(0px);\r\n        }\r\n    }\r\n}\r\n`;\r\n\r\n\r\nexport default WelcomeCard;","import { useSelector } from \"react-redux\"\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport default function UnreadTag(){\r\n    const { Id: chatId } = useSelector( store => store.chat.currentChat );\r\n    const { newMsgCount } = useSelector( store => store.realTime.chatNotifications[chatId] );\r\n\r\n    return (\r\n        <Wrapper>\r\n            <div className=\"unreadMsgTag\">\r\n                Unread Message \r\n            </div>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\nwidth: 100%;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: cetnter;\r\npadding: 20px;\r\ndiv{\r\n    padding: 5px 20px;\r\n    // background: var(--thm-transparent2-color);\r\n    border-radius: 5px;\r\n    box-shadow: -2px -2px 6px var(--thm-transparent2-color), 2px 2px 6px  #060910;\r\n}`","import axios from \"axios\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport Message from \"./components/Message\";\r\nimport { addChatMessage, closeChat, moveChatToTop, setCurrentReceiver } from \"../../store/slices/chatSlice\";\r\nimport { setChatNotification, removeChatNotification, updateViewedMessage, updateLastMessage } from \"../../store/slices/realTimeSlice\";\r\nimport { FaPaperclip } from \"react-icons/fa\";\r\nimport { MdDelete, MdSend } from \"react-icons/md\";\r\nimport { TiDeleteOutline } from \"react-icons/ti\";\r\nimport WelcomeCard from \"./components/cards/WelcomeCard\";\r\nimport socket from \"../../util/socket.io\";\r\nimport UnreadTag from \"./components/cards/unreadTag\";\r\nimport { IoIosArrowRoundBack } from \"react-icons/io\";\r\nimport { setMobileViewSection } from \"../../store/slices/chatNavSlice\";\r\n\r\n\r\nconst CurrentChat = () => {\r\n  const { Id: chatId, messages, otherMember } = useSelector((store) => store.chat.currentChat);\r\n  const { user } = useSelector((store) => store.user);\r\n  const { onlineUsers, chatNotifications } = useSelector(store => store.realTime);\r\n  const dispatch = useDispatch();\r\n  const textarea = useRef(null);\r\n  const messageContainer = useRef(null);\r\n\r\n\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [isMessagesScrolled, setIsMessagesScrolled] = useState(true);\r\n\r\n  const handlMsgeSubmit = async () => {\r\n\r\n    if(msg.trim().length === 0){\r\n      setMsg(\"\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // const { data } = await axios.post(\"http://localhost:3000/api/message/\", {\r\n      //   chatId: chatId,\r\n      //   senderId: user.userId,\r\n      //   text: msg,\r\n      // });\r\n\r\n      console.log(otherMember.name + \" is receiver name \" + otherMember._id + \" is receiver id \");\r\n\r\n      socket.emit(\"client-send-msg\", {\r\n        chatId: chatId,\r\n        senderId: user.userId,\r\n        receiverId: otherMember._id,\r\n        text: msg,\r\n      }, (res)=>{\r\n        if(res.status != 200){\r\n          throw Error(res.error);\r\n        }\r\n        console.log(res.data.text + \" >>>> is reached to server \");\r\n        dispatch(addChatMessage({\r\n          message: { ...(res.data) },\r\n          userId: user.userId\r\n        }));\r\n        dispatch(updateLastMessage({ ...res.data }));\r\n\r\n        //remove unred msg tag\r\n        dispatch(updateViewedMessage(chatId));\r\n        dispatch(moveChatToTop({chatId: chatId}));\r\n      })\r\n      setMsg(\"\");\r\n    } catch (error) {\r\n      console.log(error);\r\n      //remove unred msg tag\r\n      dispatch(updateViewedMessage(chatId));\r\n    }\r\n  };\r\n\r\n  function handelScroll(e) {\r\n    const isfullyScrolled = (e.target.scrollTop + e.target.clientHeight >= e.target.scrollHeight);\r\n    setIsMessagesScrolled(isfullyScrolled);\r\n  }\r\n\r\n\r\n  useEffect( () => {\r\n    socket.on(\"server-send-msg\", (message) => {\r\n      console.log(message.senderId + \" and receiver id is \" + otherMember._id);\r\n      if(message.chatId === chatId){\r\n        dispatch(addChatMessage({message: {...message}, userId: user.userId}));\r\n        dispatch(updateLastMessage({...message}));\r\n        dispatch(updateViewedMessage(chatId));\r\n        socket.emit(\"message-viewed\", chatId, message._id, (res)=> {\r\n          console.log(\"message is viewed in current message with status \" + res.status);\r\n        });\r\n      }\r\n      else{\r\n        dispatch(setChatNotification({...message}));\r\n      }\r\n\r\n      //sending this chat card at top of chat card stack\r\n      dispatch(moveChatToTop({chatId: message.chatId}));\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"server-send-msg\");\r\n    }\r\n  }, [chatId]);\r\n\r\n  useEffect( () => {\r\n    if(messageContainer.current){\r\n      messageContainer.current.scrollTo(0, messageContainer.current.scrollHeight);\r\n    }\r\n\r\n  }, [messages]);\r\n\r\n  // useEffect( ()=> {\r\n  //   console.error(textarea);\r\n  //   if(textarea.current){\r\n  //     textarea.current.focus();\r\n  //   }\r\n  //   window.navigator.vibrate(1000);\r\n  // })\r\n\r\n\r\n  return (\r\n    <>\r\n      {\r\n        chatId === \"\" ? (\r\n          <WelcomeCard />\r\n        ) \r\n        : \r\n        (\r\n          <Wrapper>\r\n            <div className=\"head\">\r\n              <div className=\"userInfo-container\">\r\n                <div className=\"back-container\" onClick={()=>{\r\n                  dispatch(setMobileViewSection(\"chatBody\"));\r\n                  dispatch(closeChat());\r\n                }}>\r\n                  <IoIosArrowRoundBack/>\r\n                  <div className=\"img-container\">\r\n                    <img src=\"userpic\" alt=\"chat user\" />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <span>{otherMember.name}</span>\r\n                  {\r\n                    onlineUsers[otherMember._id] ? \r\n                    <span>Online</span> : null\r\n                  }\r\n                </div>\r\n              </div>\r\n              <div className=\"functionality-container\">\r\n                <ul>\r\n                  <li>\r\n                    <FaPaperclip />\r\n                  </li>\r\n                  <li>\r\n                    <MdDelete />\r\n                  </li>\r\n                </ul>\r\n\r\n                <div className=\"close-message\" onClick={()=>{\r\n                  dispatch(setCurrentReceiver({\r\n                    name: \"\",\r\n                    Id: \"\",\r\n                  }));\r\n                  dispatch(closeChat());\r\n                }}>\r\n                  <TiDeleteOutline />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"background-container\">\r\n              <div className={(isMessagesScrolled ? \"\" : \"scrolling-down\") + \" messages custom-scroll\"}\r\n                ref={messageContainer}\r\n                onScroll={(e) => handelScroll(e)}\r\n              >\r\n                {messages.length > 0 ? (\r\n                  (chatNotifications[chatId] && chatNotifications[chatId].lastViewedMessage) &&\r\n                  !(chatNotifications[chatId].lastViewedMessage._id === chatNotifications[chatId].lastMessage._id ||\r\n                  chatNotifications[chatId].lastMessage.senderId === user.userId) ?\r\n                  \r\n                  messages.map((message, i) => {\r\n                    return (\r\n                      <>\r\n                      {\r\n                        chatNotifications[chatId].lastViewedMessage._id === message._id ?\r\n                        <>\r\n                          <Message key={i} message={message} />\r\n                          <UnreadTag/>\r\n                        </>\r\n                        :\r\n                        <Message key={i} message={message} />\r\n                      }\r\n                      </>\r\n                    )\r\n                  })\r\n                  :\r\n                  messages.map((message, i) => {\r\n                    return (<Message key={i} message={message} />);\r\n                  })\r\n                ) : (\r\n                  <h2 className=\"msg-404\">\r\n                    No messages found.\r\n                  </h2>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"text-editor\">\r\n                <div className=\"wrap-auto-resize\">\r\n                  <div className=\"textarea-cpy\">{msg + \" \"}</div>\r\n                  <textarea\r\n                    className=\"custom-scroll\"\r\n                    name=\"message\"\r\n                    rows=\"1\"\r\n                    placeholder=\"write your message here\"\r\n                    focus=\"true\"\r\n                    ref={textarea}\r\n                    value={msg}\r\n                    onChange={ (e) => setMsg(e.target.value) }\r\n                    virtualkeyboardpolicy=\"manual\"\r\n                    onClick={ () => {\r\n                      textarea.current.removeAttribute(\"virtualkeyboardpolicy\");\r\n                      // textarea.current.setAttribute(\"virtualkeyboardpolicy\", \"manual\");\r\n                      // textarea.current.inputMode=\"null\";\r\n                      // navigator.virtualKeyboard.show();\r\n                    } }\r\n                    onBlur={\r\n                      (e)=>{\r\n                        e.currentTarget.focus();\r\n                      }\r\n                    }\r\n                    autoFocus\r\n                  ></textarea>\r\n                </div>\r\n                <div>\r\n                  <button onClick={handlMsgeSubmit}>\r\n                    <MdSend/>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Wrapper>\r\n        )\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.section`\r\n  height: 100%;\r\n  width: 100%;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media (max-width: 450px){\r\n    padding: 20px 10px 10px 10px;\r\n  }\r\n  \r\n  \r\n  .head {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 100px;\r\n\r\n    @media ( max-width: 950px ){\r\n      margin-top: -20px;\r\n    }\r\n\r\n    .userInfo-container{\r\n      display: flex;\r\n      gap: 15px;\r\n      width: 100%;\r\n\r\n      .back-container{\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        \r\n        &>svg{\r\n          height: 35px;\r\n          width: 35px;\r\n          \r\n          @media (min-width: 750px){\r\n            display: none;\r\n          }\r\n        }\r\n      }\r\n\r\n      .img-container{\r\n        width: 60px;\r\n        height: 60px;\r\n        background-color: yellow;\r\n        border-radius: 50%;\r\n\r\n        img{\r\n          width: 100%;\r\n          border-radius: 50%;\r\n        }\r\n      }\r\n\r\n      &>div:last-child{\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        overflow: none;\r\n        overflow: hidden;\r\n\r\n        &>span:first-child{\r\n          font-weight: bold;\r\n          font-size: 20px;\r\n          text-overflow: ellipsis;\r\n          overflow: hidden;\r\n\r\n          &+span{\r\n            font-size: 10px;\r\n            font-style: italic;\r\n            color: #d5d5d5;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .functionality-container{\r\n      display: flex;\r\n      display: none;\r\n      gap: 40px;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n\r\n      ul{\r\n        display: flex;\r\n        list-style: none;\r\n        gap: 20px;\r\n  \r\n        // li{\r\n        //   margin: 10px;\r\n        // }\r\n        svg{\r\n          width: 20px;\r\n          height: 20px;\r\n        }\r\n      }\r\n\r\n      .close-message{\r\n        svg{\r\n          width: 30px;\r\n          height: 30px;\r\n        }\r\n      }\r\n\r\n      svg{\r\n        transform: scale(1);\r\n        transition: 0.2s ease;\r\n      }\r\n      li, .close-message{\r\n        &:hover svg{\r\n          transform: scale(1.2);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  .background-container{\r\n    background-color: var(--thm-transparent-color);\r\n    border-radius: 10px;\r\n    padding: 10px 40px;\r\n    height: calc(100% - 100px);\r\n    display: flex;\r\n    gap: 10px;\r\n    flex-direction: column;\r\n    overflow: hidden;  \r\n\r\n    @media (max-width: 950px){\r\n      height: calc(100% - 80px);\r\n      padding: 10px 20px;\r\n    }\r\n\r\n    @media (max-width: 450px){\r\n      padding: 10px;\r\n    }\r\n\r\n\r\n    .messages {\r\n      height: calc(100% - 100px);\r\n      flex-shrink: 1;\r\n      flex-grow: 1;\r\n      position: relative;\r\n      margin-right: -20px;\r\n\r\n      @media (max-width: 450px){\r\n        margin-right: -5px;\r\n      }\r\n\r\n      .msg-404{\r\n        height: 100%;\r\n        width: 100%;\r\n        margin: 0px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        font-size: 30px;\r\n        color: var(--thm-transparent-color);\r\n      }\r\n\r\n\r\n      &.scrolling-down + .text-editor::before{\r\n        opacity: 1;\r\n      }\r\n    }\r\n\r\n    \r\n\r\n    .text-editor {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: flex-end;\r\n      flex-shrink: 0;\r\n      flex-grow: 0;\r\n      padding: 10px 0px;\r\n      position: relative;\r\n      gap: 10px;\r\n\r\n      @media (max-width: 450px){\r\n        padding: 0;\r\n      }\r\n\r\n      //for shadow below msg container\r\n      &::before{\r\n        --height: 10px;\r\n        content: \"\";\r\n        display: block;\r\n        position: absolute;\r\n        top: calc(-10px - var(--height));\r\n        left: -50%;\r\n        width: 200%;\r\n        height: var(--height);\r\n        background: linear-gradient(0deg,var(--thm-background-color), transparent);\r\n        opacity: 0;\r\n        pointer-event: none;\r\n        transition: 0.15s ease;\r\n      }\r\n\r\n      \r\n      &>.wrap-auto-resize{\r\n        width: 100%;\r\n        min-height: 40px;\r\n        display: grid;\r\n        padding: 8px;\r\n        border-radius: 8px;\r\n        border: 1px solid var(--thm-primary-color);\r\n        flex-grow: 1;\r\n        flex-shrink: 1;\r\n\r\n        &>.textarea-cpy{\r\n          white-space: pre-wrap;\r\n          word-break: break-word;\r\n          visibility: hidden;\r\n        }\r\n\r\n        &>textarea, &>.textarea-cpy {\r\n          width: calc(100% + 10px);\r\n          min-height: 100%;\r\n          max-height: 6.2em;\r\n          margin-right: -8px; //equal to parent padding\r\n          border: none;\r\n          outline: none;\r\n          background-color: transparent;\r\n          font-size: 15px;\r\n          line-height: 1.25em;\r\n          resize: none;\r\n          grid-area: 1/1/2/2;\r\n        }\r\n        &>textarea::placeholder{\r\n          color: var(--thm-transparent2-color);\r\n        }\r\n      }\r\n      \r\n      \r\n      &>div:last-child{\r\n        display: flex;\r\n        flex-shrink: 0;\r\n        flex-grow: 0;\r\n        justify-content: center;\r\n        align-items: center;\r\n        \r\n        button {\r\n          width: 40px;\r\n          height: 40px;\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          padding: 10px;\r\n          background-color: var(--thm-secondary-color);\r\n          border: none;\r\n          outline: none;\r\n          border-radius: 8px;\r\n\r\n          &>svg{\r\n            width: 30px;\r\n            height: 30px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n\r\n`;\r\nexport default React.memo(CurrentChat);\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ChatBody from \"./chatBody\";\r\nimport CurrentChatMessages from \"./CurrentChatMessages\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport socket from \"../../util/socket.io\";\r\nimport { addOnlineUser, removeOfflineUser, setOnlineUsers } from \"../../store/slices/realTimeSlice\";\r\nimport ChatNavBar from \"./components/chatNavBar\";\r\n// import Navbar from \"../../components/helper/Navbar\";\r\n\r\n\r\nfunction openFullscreen(e) {\r\n  // const elem = e.currentTarget;\r\n  // if (elem.requestFullscreen) {\r\n  //   elem.requestFullscreen();\r\n  // } else if (elem.webkitRequestFullscreen) { /* Safari */\r\n  //   elem.webkitRequestFullscreen();\r\n  // } else if (elem.msRequestFullscreen) { /* IE11 */\r\n  //   elem.msRequestFullscreen();\r\n  // }\r\n  e.currentTarget.scrollTo(0, 1);\r\n}\r\n\r\n\r\nconst ChatPage = () => {\r\n\r\n  const { user } = useSelector( store => store.user );\r\n  const { mobileViewSection } = useSelector( store => store.chatNav);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect( () => {\r\n\r\n    function handelConnection(){\r\n      socket.emit(\"register-connection\", {\"userId\": user.userId, \"socketId\": socket.id}, (res) => {\r\n        console.log(res);\r\n        dispatch(setOnlineUsers(res.onlineUsers));\r\n      });\r\n    }\r\n    if(socket.connected){\r\n      handelConnection();\r\n    }\r\n    else{\r\n      socket.on(\"connect\", () => {\r\n        handelConnection();\r\n      })\r\n    }\r\n\r\n    //for handelling user connection and disconnection\r\n    socket.on(\"new-user-connected\", (userId) => {\r\n      dispatch(addOnlineUser(userId));\r\n    });\r\n    socket.on(\"user-disconnected\", (userId) => {\r\n      dispatch(removeOfflineUser(userId));\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"connect\");\r\n      socket.off(\"register-connection\");\r\n      socket.off(\"new-user-connected\");\r\n      socket.off(\"user-disconnected\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect( () => {\r\n    window.scrollTo(0,1);\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {/* <Navbar/> */}\r\n      <Wrapper onLoad={ openFullscreen }>\r\n        <div className={(console.warn(mobileViewSection) || mobileViewSection === \"currentChatContainer\" ? \r\n            \"show-current-message-container \" : \"\") + \"container\"\r\n          }\r\n        >\r\n          <nav>\r\n            <ChatNavBar/>\r\n          </nav>\r\n\r\n          <div className=\"chat-container\">\r\n              <ChatBody/>\r\n          </div>\r\n          <div className=\"current-chat-container\">\r\n            <CurrentChatMessages />\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\nconst Wrapper = styled.section`\r\n --thm-svg-color: #9e9e9e;\r\n --thm-svg-active-color: var(--thm-primary-color); \r\n\r\n  width: 100vw;\r\n  height: 100vh;\r\n  height: var(--calculated-vh, 100vh);\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  &:fullscreen, &::backdrop{\r\n    background-color: var(--thm-background-color);\r\n  }\r\n\r\n  *{\r\n    color: white;\r\n  }\r\n\r\n  .container {\r\n    display: flex;\r\n    height: 100%;\r\n    width: 100%;\r\n    transition: 0.2s ease;\r\n\r\n    @media (max-width: 950px){\r\n      overflow: hidden;\r\n      display: grid;\r\n      grid-template-columns: 0.75fr 1fr;\r\n      grid-auto-rows: 100%;\r\n    }\r\n    @media (max-width: 750px){\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      grid-template-columns: 1fr 1fr;\r\n      width: 200%;\r\n    }\r\n\r\n    &.show-current-message-container{\r\n      @media( max-width: 750px){\r\n        left: -100%;\r\n      }\r\n    }\r\n\r\n    &>nav{\r\n      height: 100%;\r\n      @media (max-width: 950px){\r\n        display: none;\r\n      }\r\n    }\r\n\r\n    .chat-container {\r\n      flex-basis: 400px;\r\n      width: 400px;\r\n      min-width: 350px;\r\n      height: 100%;\r\n      overflow-y: auto;\r\n      overflow-x: hidden;\r\n\r\n      @media (max-width: 950px){\r\n        width: 100%;\r\n        grid-area: 1/1/2/2;\r\n      }\r\n    }\r\n\r\n    .current-chat-container {\r\n      width: calc(100% - 80px - 400px);\r\n      min-width: 350px;\r\n      height: 100%;\r\n\r\n      @media (max-width: 950px){\r\n        width: 100%;\r\n        grid-area: 1/2/2/3;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport default React.memo(ChatPage);"],"names":["styled","props","dispatch","useDispatch","user","useSelector","store","currentChat","chat","realTime","onlineUsers","chatNotifications","useEffect","console","warn","lastMessage","setChatNotification","chatId","_id","newMsgCount","senderId","userId","unreadMsgCount","lastViewedMessage","dataFromDB","isChatOpen","Id","className","onClick","updateViewedMessage","setCurrentReceiver","name","otherMember","avatar","startConversation","setMobileViewSection","removeChatNotification","socket","res","log","status","src","getAvatarSvg","alt","text","Wrapper","allChats","newChat","getChats","token","getToken","logOutUser","axios","HOST_URL","PORT","headers","Authorization","data","setAllChats","length","setChatSection","map","i","receiverId","createChat","state","useState","users","setUsers","getAllUser","ChatNavBar","chatSection","chatNav","navigate","useNavigate","navHandler","pram","to","isSearching","setIsSearching","togleSearching","type","Message","message","classes","codePointAt","char","React","xmlns","xmlnsXlink","width","height","version","viewBox","id","offset","stopColor","stopOpacity","cx","cy","r","fx","fy","gradientTransform","gradientUnits","spreadMethod","xlinkHref","fill","d","transform","opacity","fillOpacity","fillRule","strokeWidth","rx","ry","UnreadTag","CurrentChat","messages","textarea","useRef","messageContainer","msg","setMsg","isMessagesScrolled","setIsMessagesScrolled","handlMsgeSubmit","trim","Error","error","addChatMessage","updateLastMessage","moveChatToTop","current","scrollTo","scrollHeight","closeChat","ref","onScroll","e","isfullyScrolled","target","scrollTop","clientHeight","handelScroll","rows","placeholder","focus","value","onChange","virtualkeyboardpolicy","removeAttribute","onBlur","currentTarget","autoFocus","openFullscreen","ChatPage","mobileViewSection","handelConnection","setOnlineUsers","addOnlineUser","removeOfflineUser","window","onLoad","CurrentChatMessages"],"sourceRoot":""}